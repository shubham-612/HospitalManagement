package com.cg.controller;
 
import java.util.List;
import java.util.Optional;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.cg.dto.DoctorDTO;
import com.cg.entity.Appointment;
import com.cg.exception.ResourceNotFound;
import com.cg.feign.DoctorClient;
import com.cg.service.IAppointmentService;
 
@RequestMapping("/appointment")
@RestController
public class AppointmentController {
	
	@Autowired
	IAppointmentService as;
	
	@Autowired
	DoctorClient dc;
	
	@GetMapping("/doctors/getall") //http://localhost:7100/api/dept/allemp
	public List<DoctorDTO> getDoctors()
	{
		return as.DoctorResponse();
	}
	
	// FIND ALL APPOINTMNET
	@GetMapping("/getall")    public List<Appointment> getAllAppointments() {
        return as.findAllAppointments();                
    }
	
	// FIND PRODUCT BY ID WITH EXCEPTION 
	@GetMapping("/{aid}")
	Optional<Appointment>findByAppointmentIdFromDBWithException(@PathVariable int aid) throws ResourceNotFound
	{	Optional<Appointment> appointment = as.findAppointmentByaid(aid);
    	appointment.orElseThrow(() -> new ResourceNotFound("Appointment not found for this id :: " + aid));
    	System.out.println(aid);
    return appointment;	
	}
	
	// CREATE PRODUCT
	@PostMapping("/create")
	public Appointment createAppointment( @RequestBody Appointment appointment) {
        return as.createAppointment(appointment);
	}
	
	// DELETE PRODUCT
	@DeleteMapping("/delete/{id}")
	public void DeleteAppointment(@PathVariable int aid) {
		 as.deleteAppointment(aid);
	}
	
	// UPDATE PRODUCT
	@PutMapping("/update")
	public Appointment updateAppointment(@RequestBody Appointment app) throws ResourceNotFound{
		int aid = app.getAid();
		return as.updateAppointment(aid, app);
	}
}